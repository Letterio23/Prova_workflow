name: Sorare Market Alert (Multi-Player)

on:
  # Permette di avviare il workflow manualmente per testarlo
  workflow_dispatch:

  # Esegue il workflow automaticamente su una schedulazione
  schedule:
    # Esegue ogni 15 minuti, ma SOLO tra le 07:00 e le 23:59 UTC.
    - cron: '*/15 7-23 * * *'

# Aggiunge i permessi di scrittura al workflow per salvare lo stato delle notifiche
permissions:
  contents: write

jobs:
  check-prices:
    runs-on: ubuntu-latest
    steps:
      # 1. Scarica il codice del tuo repository
      - name: Checkout del codice
        uses: actions/checkout@v4

      # 2. Imposta l'ambiente Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 3. Installa le librerie Python necessarie
      - name: Installa dipendenze
        run: pip install requests gspread google-auth-oauthlib

      # 4. Esegue lo script che controlla i prezzi
      - name: Esegui lo script di controllo mercato
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          SORARE_API_KEY: ${{ secrets.SORARE_API_KEY }}
          GSPREAD_CREDENTIALS: ${{ secrets.GSPREAD_CREDENTIALS }}
        run: python market_alert.py

      # 5. Salva lo stato delle notifiche se Ã¨ cambiato
      - name: Commit and push notification state
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          if [ -f sent_notifications.json ]; then
            git add sent_notifications.json
            git commit -m "Aggiorna lo stato delle notifiche inviate" || exit 0
            git push
          else
            echo "Nessun file di stato da salvare."
          fi
